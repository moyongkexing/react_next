{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nvar initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n};\n\nfunction calcReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ENTER':\n      var data2 = state.data.slice();\n      var s = action.value;\n      data2.unshift(s);\n      var num = s.replace(/[^0-9]/g, \"\");\n      var number2 = state.number.slice();\n      number2.unshift(num);\n      var result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(calcReducer, state, applyMiddleware);\n}","map":{"version":3,"sources":["/Users/moyongkexing/Documents/react_next/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,OADK;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,MAAM,EAAE,EAHM;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAhB;;AAOA,SAASC,WAAT,GAA8C;AAAA,MAAzBC,KAAyB,uEAAjBN,OAAiB;AAAA,MAARO,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAoB,EAApB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAO;AACLb,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,IAAI,EAAEO,KAFD;AAGLN,QAAAA,MAAM,EAAEa,OAHH;AAILZ,QAAAA,MAAM,EAAEA;AAJH,OAAP;;AAMF,SAAK,OAAL;AACE,aAAO;AACLH,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,MAAM,EAAE,EAHH;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAMF;AACE,aAAOE,KAAP;AAvBJ;AAyBD;;AAED,OAAO,SAASW,SAAT,GAAoC;AAAA,MAAjBX,KAAiB,uEAATN,OAAS;AACzC,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EAAqBR,eAArB,CAAlB;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n}\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g,\"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = (state.result * 1) + (num * 1);\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      }\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware)\n}\n\n"]},"metadata":{},"sourceType":"module"}