{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moyongkexing/Documents/react_next/next_app/components/FireFind.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass FireFind extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      borderBottom: \"1px solid gray\"\n    });\n\n    this.state = {\n      input: '',\n      data: []\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  doAction(e) {\n    this.findFireData(this.state.input);\n  }\n\n  findFireData(s) {\n    let db = firebase.database();\n    let ref = db.ref('sample/');\n    let self = this;\n    ref.orderByKey().equalTo(s).on('value', snapshot => {\n      self.setState({\n        data: snapshot.val()\n      });\n    });\n  }\n\n  getTableData() {\n    let result = [];\n\n    if (this.state.data == null || this.state.data.length == 0) {\n      return [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NO DATA.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)];\n    }\n\n    ;\n\n    for (let i in this.state.data) {\n      result.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: this.state.data[i].ID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: this.state.data[i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: this.state.data[i].message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this));\n    }\n\n    ;\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: this.style,\n        onChange: this.doChange,\n        value: this.state.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.doAction,\n        style: this.style,\n        children: \"Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.getTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default FireFind;","map":{"version":3,"sources":["/Users/moyongkexing/Documents/react_next/next_app/components/FireFind.js"],"names":["React","Component","firebase","FireFind","constructor","props","borderBottom","state","input","data","doChange","bind","doAction","e","setState","target","value","findFireData","s","db","database","ref","self","orderByKey","equalTo","on","snapshot","val","getTableData","result","length","i","push","ID","name","message","render","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass FireFind extends Component {\n  style = {\n    borderBottom: \"1px solid gray\"\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      data: []\n    }\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    })\n  }\n  doAction(e) {\n    this.findFireData(this.state.input);\n  }\n\n  findFireData(s) {\n    let db = firebase.database();\n    let ref = db.ref('sample/');\n    let self = this;\n    ref.orderByKey().equalTo(s).on('value', (snapshot)=>{\n      self.setState({\n        data:snapshot.val()\n      });\n    });\n  }\n\n  getTableData() {\n    let result = [];\n    if (this.state.data == null || this.state.data.length == 0) {\n      return [<tr key=\"0\"><th>NO DATA.</th></tr>]\n    };\n    for(let i in this.state.data) {\n      result.push(<tr key={i}>\n        <th>{this.state.data[i].ID}</th>\n        <td>{this.state.data[i].name}</td>\n        <td>{this.state.data[i].message}</td>\n      </tr>);\n    };\n    return result;\n  }\n\n  render() {\n    return(<div>\n      <input type=\"text\" style={this.style} onChange={this.doChange} value={this.state.input} />\n      <button onClick={this.doAction} style={this.style}>Find</button>\n      <hr />\n      <table><tbody>\n        {this.getTableData()}  \n      </tbody></table>\n    </div>);\n  }\n}\n\nexport default FireFind;\n"]},"metadata":{},"sourceType":"module"}